---
# tasks file for zabbix_server
- name: include assert.yml
  include_tasks: assert.yml
  run_once: yes

- name: install zabbix-server requirements
  package:
    name: "{{ zabbix_server_requirements }}"
    state: present

- name: install zabbix_server
  package:
    name: zabbix-server-mysql
    state: present

- name: find zabbix_documentation_directory
  find:
    paths:
      - "{{ zabbix_server_docdir }}"
    file_type: directory
    use_regex: yes
    patterns:
      - '^zabbix-server-mysql'
      - '^zabbix-server-mysql-.*'
  register: zabbix_documentation_directory_found

- name: unarchive zabbix schema
  command: gunzip {{ zabbix_documentation_directory_found.files[-1].path }}/create.sql.gz
  args:
    creates: "{{ zabbix_documentation_directory_found.files[-1].path }}/create.sql"
  notify:
    - import zabbix schema
    - restart zabbix_server
  loop_control:
    label: "{{ item.path }}"

- name: set selinux settings for zabbix_server
  seboolean:
    name: "{{ item }}"
    state: yes
    persistent: yes
  loop:
    - httpd_can_connect_zabbix
    - httpd_can_network_connect_db
    - zabbix_can_network
  when:
    - ansible_selinux.status is defined
    - ansible_selinux.status == "enabled"

# - name: place selinux type enforcement
#   copy:
#     src: my-zabbixserver.te
#     dest: /etc/zabbix/my-zabbixserver.te
#     mode: "0644"
#   notify:
#     - create selinux mod for zabbix_server
#     - create selinux pp for zabbix_server
#     - load selinux pp for zabbix_server
#   when:
#     - ansible_selinux.status is defined
#     - ansible_selinux.status == "enabled"

- name: flush handlers
  meta: flush_handlers

- name: configure zabbix_server
  template:
    src: zabbix_server.conf.j2
    dest: /etc/zabbix/zabbix_server.conf
    mode: "0644"
  notify:
    - restart zabbix_server

- name: start and enable zabbix_server
  service:
    name: zabbix-server
    state: started
    enabled: yes
